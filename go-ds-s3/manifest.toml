name = "go-ds-s3"

[builders]
"docker:go" = { enabled = true, enable_go_build_cache = true }
"exec:go"   = { enabled = true }

[runners]
"local:docker"  = { enabled = true }
"local:exec"    = { enabled = true }
"cluster:k8s"   = { enabled = true }

[global.build_config]
  enable_go_build_cache = true

[[testcases]]
name = "add_dir"
instances = { min = 2, max = 10000, default = 5 }

  [testcases.params]
  iterations        = { type = "int", desc = "number of iterations to run", unit = "count", default = 5 }

[[testcases]]
name = "testa"
instances = { min = 2, max = 10000, default = 5 }

  [testcases.params]
  iterations        = { type = "int", desc = "number of iterations to run", unit = "count", default = 5 }

[[testcases]]
name = "testb"
instances = { min = 2, max = 10000, default = 5 }

  [testcases.params]
  iterations        = { type = "int", desc = "number of iterations to run", unit = "count", default = 5 }

[[testcases]]
name = "testc"
instances = { min = 2, max = 64, default = 2 }

  [testcases.params]
  run_count = { type = "int", desc = "number of iterations of the test", unit = "iteration", default = 1 }
  run_timeout_secs = { type = "int", desc = "timeout for an individual run", unit = "seconds", default = 90 }
  leech_count = { type = "int", desc = "number of leech nodes", unit = "peers", default = 1 }
  passive_count = { type = "int", desc = "number of passive nodes (neither leech nor seed)", unit = "peers", default = 0 }
  timeout_secs = { type = "int", desc = "timeout", unit = "seconds", default = 300 }
  bstore_delay_ms = { type = "int", desc = "blockstore get / put delay", unit = "milliseconds", default = 5 }
  request_stagger = { type = "int", desc = "time between each leech's first request", unit = "ms", default = 0}
  file_size = { type = "int", desc = "file size", unit = "bytes", default = 4194304 }
  latency_ms = { type = "int", desc = "latency", unit = "ms", default = 5 }
  jitter_pct = { type = "int", desc = "jitter as percentage of latency", unit = "%", default = 10 }
  bandwidth_mb = { type = "int", desc = "bandwidth", unit = "Mib", default = 1024 }
  parallel_gen_mb = { type = "int", desc = "maximum allowed size of seed data to generate in parallel", unit = "Mib", default = 100 }
